<launch>

  <!-- defines name of the namespace of the drone -->
  <arg name="UAV_NAME" default="$(env UAV_NAME)" />
  <arg name="RUN_TYPE" default="$(env RUN_TYPE)" />
  
  <arg name="sensor_type" default="gps" />
  <arg name="use_3D" default="false" />

  <arg name="config_uav_names" default="" />
  <arg name="config_sensor" default=""/>

  <!-- will it run using GNU debugger? -->
  <arg name="DEBUG" default="false" />
  <arg unless="$(arg DEBUG)" name="launch_prefix_debug" value=""/>
  <arg     if="$(arg DEBUG)" name="launch_prefix_debug" value="debug_roslaunch"/>

  <!-- will it run as standalone nodelet or using a nodelet manager? -->
  <arg name="standalone" default="true" />
  <arg name="manager" default="$(arg UAV_NAME)_sensor_neighbor_manager" />
  <arg name="n_threads" default="8" />
  <arg unless="$(arg standalone)" name="nodelet" value="load"/>
  <arg     if="$(arg standalone)" name="nodelet" value="standalone"/>
  <arg unless="$(arg standalone)" name="nodelet_manager" value="$(arg manager)"/>
  <arg     if="$(arg standalone)" name="nodelet_manager" value=""/>

  <!-- Namespace -->
  <group ns="$(arg UAV_NAME)">
    
    <node pkg="nodelet" type="nodelet" name="sensor_neighbor" args="$(arg nodelet) sensor_neighbor/SensorNeighbor $(arg nodelet_manager)" launch-prefix="$(arg launch_prefix_debug)" output="screen">
      <!-- ROS parameters config file -->
      <param name="uav_name" value="$(arg UAV_NAME)" />
      <param name="use_3D" value="$(arg use_3D)" />

      <rosparam file="$(find flocking)/config/sensor_neighbors.yaml" />
      
      <!-- Load custom sensor_type file -->
      <rosparam if="$(eval not arg('config_sensor') == '')" file="$(arg config_sensor)" />
      
      <!-- Load default uav_names file if using GPS -->
      <rosparam if="$(eval arg('sensor_type') == 'gps')" file="$(find flocking)/config/uav_names.yaml" />

      <!-- Load custom uav_names file -->
      <rosparam if="$(eval not arg('config_uav_names') == '')" file="$(arg config_uav_names)" />

    </node>
  </group>

</launch>
